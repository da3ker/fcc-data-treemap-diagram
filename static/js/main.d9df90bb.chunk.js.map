{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","gameData","setGameData","colors","gameDataUrl","useEffect","a","fetch","response","json","data","console","log","fetchData","canvas","d3","tooltip","hierarchy","node","sum","sort","node1","node2","size","createTreemap","gameTiles","leaves","block","selectAll","enter","append","attr","d","category","on","transition","duration","style","html","pageX","pageY","name","drawTreemap","className","id","class","width","height","x","y","fill","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9df90bb.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.scss';\nimport * as d3 from 'd3';\n\nfunction App() {\n  const [gameData, setGameData] = useState([])\n\n  let colors = {\n    'Wii': '#4A658B',\n    'DS': '#A5B2C5',\n    'X360':'#4E9B47',\n    'GB': '#A7CDA3',\n    'PS3':'#D94D55',\n    'NES':'#ECA6AA',\n    'PS2':'#FFDF33',\n    '3DS':'#FFEF99',\n    'PS4':'#95D1D7',\n    'SNES':'#CAE8EB',\n    'PS':'#8C547C',\n    'N64':'#C5A9BD',\n    'GBA':'#FFAD33',\n    'XB':'#FFD699',\n    'PC':'#869C5D',\n    '2600':'#C3CDAE',\n    'PSP':'#C7B8B8',\n    'XOne':'#FBEEEE'\n  }\n\n  let gameDataUrl = 'https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/video-game-sales-data.json';\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await fetch(gameDataUrl)\n      let data = await response.json()\n      setGameData(data)\n      console.log(data)\n    }\n    fetchData()\n  }, [gameDataUrl])\n\n  let canvas = d3.select('#canvas')\n\n  let tooltip = d3.select('#tooltip')\n\n  const drawTreemap = () => {\n    let hierarchy = d3.hierarchy(gameData, (node) => node['children'])\n                      .sum((node) => node['value'])\n                      .sort((node1, node2) => node2['value'] - node1['value']);\n\n    let createTreemap = d3.treemap()\n                          .size([1000, 600])\n\n    createTreemap(hierarchy)      \n    \n    let gameTiles = hierarchy.leaves()\n    console.log(gameTiles)\n    \n    let block = canvas.selectAll('g')\n                      .data(gameTiles)\n                      .enter()\n                      .append('g')\n                      .attr('transform', (d) => {\n                        return 'translate(' + d['x0'] + ', ' + d['y0'] + ')'\n                      })\n                      \n                      \n\n    block.append('rect')\n         .attr('class', 'tile')\n         .attr('fill', (d) => {\n           let category = d['data']['category']\n            return colors[category]\n         })\n         .attr('data-name', (d) => d['data']['name'])\n         .attr('data-category', (d) => d['data']['category'])\n         .attr('data-value', (d) => d['data']['value'])\n         .attr('width', (d) => d['x1'] - d['x0'] - 1)\n         .attr('height', (d) => d['y1'] - d['y0'] -1)\n         .on('mouseover', (d) => {\n           tooltip.transition()\n                  .duration(200)\n                  .style('visibility', 'visible')\n\n           tooltip.html('Name: ' + d['data']['name'] + '<br/>Category: ' + d['data']['category'] + '<br/>Value: ' + d['data']['value'])\n           tooltip.style(\"left\", d3.event.pageX + 20 + \"px\")\n                  .style(\"top\", d3.event.pageY - 20 + \"px\")  \n\n           tooltip.attr('data-value', d['data']['value'])\n          })\n         .on('mouseout', (d) => {\n           tooltip.transition()\n                  .duration(200)\n                  .style('visibility', 'hidden')\n         })\n         \n         \n    block.append('foreignObject')\n         .html((d) => {\n           return '<div style=\"width: 45px; text-align:start; overflow-wrap: break-word;\">' + d.data.name +'</div>'\n          })\n         .attr('x', 5)\n         .attr('y', 5)\n         .attr('width', 45)\n         .attr('height', 100)\n         .attr('class', 'game-name')\n         .style('font-size', '0.5em')\n         .style('font-weight', 700)\n         .on('mouseover', (d) => {\n          tooltip.transition()\n                 .duration(200)\n                 .style('visibility', 'visible')\n\n          tooltip.html('Name: ' + d['data']['name'] + '<br/>Category: ' + d['data']['category'] + '<br/>Value: ' + d['data']['value'])\n          tooltip.style(\"left\", d3.event.pageX + 20 + \"px\")\n                 .style(\"top\", d3.event.pageY - 20 + \"px\")  \n\n          tooltip.attr('data-value', d['data']['value'])\n         })\n        .on('mouseout', (d) => {\n          tooltip.transition()\n                 .duration(200)\n                 .style('visibility', 'hidden')\n        })       \n  }\n\n  useEffect(() => {\n   drawTreemap()\n  })\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"title\">Video Game Sales</h1>\n      <h4 id=\"description\">Top 100 Most Sold Video Games Grouped by Platform</h4>\n      <svg id=\"canvas\"></svg>\n      <br />\n      <svg id=\"legend\">\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"20\" y=\"20\" fill={colors['Wii']}></rect>\n          <text x=\"45\" y=\"36\">Wii</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"20\" y=\"60\" fill={colors['GB']}></rect>\n          <text x=\"45\" y=\"76\">GB</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"20\" y=\"100\" fill={colors['PS2']}></rect>\n          <text x=\"45\" y=\"116\">PS2</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"20\" y=\"140\" fill={colors['SNES']}></rect>\n          <text x=\"45\" y=\"156\">SNES</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"20\" y=\"180\" fill={colors['GBA']}></rect>\n          <text x=\"45\" y=\"196\">GBA</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"20\" y=\"220\" fill={colors['2600']}></rect>\n          <text x=\"45\" y=\"236\">2600</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"120\" y=\"20\" fill={colors['DS']}></rect>\n          <text x=\"145\" y=\"36\">DS</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"120\" y=\"60\" fill={colors['PS3']}></rect>\n          <text x=\"145\" y=\"76\">PS3</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"120\" y=\"100\" fill={colors['3DS']}></rect>\n          <text x=\"145\" y=\"116\">3DS</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"120\" y=\"140\" fill={colors['PS']}></rect>\n          <text x=\"145\" y=\"156\">PS</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"120\" y=\"180\" fill={colors['XB']}></rect>\n          <text x=\"145\" y=\"196\">XB</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"120\" y=\"220\" fill={colors['PSP']}></rect>\n          <text x=\"145\" y=\"236\">PSP</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"220\" y=\"20\" fill={colors['X360']}></rect>\n          <text x=\"245\" y=\"36\">X360</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"220\" y=\"60\" fill={colors['NES']}></rect>\n          <text x=\"245\" y=\"76\">NES</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"220\" y=\"100\" fill={colors['PS4']}></rect>\n          <text x=\"245\" y=\"116\">PS4</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"220\" y=\"140\" fill={colors['N64']}></rect>\n          <text x=\"245\" y=\"156\">N64</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"220\" y=\"180\" fill={colors['PC']}></rect>\n          <text x=\"245\" y=\"196\">PC</text>\n        </g>\n        <g>\n          <rect class=\"legend-item\" width=\"20\" height=\"20\" x=\"220\" y=\"220\" fill={colors['XOne']}></rect>\n          <text x=\"245\" y=\"236\">X0ne</text>\n        </g>\n      </svg>\n      <br/>\n      <span id=\"da3ker\">by da3ker</span>\n      <div id=\"tooltip\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}